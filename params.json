{
  "name": "Luks-unlock-by-usb-ssh-passphrase",
  "tagline": "a hook-script for ubuntu server 14.04 to unlock a LUKS-drive at boot, using ssh, an usb-drive or passphrase",
  "body": "# LUKS-unlock-by-usb-ssh-passphrase\r\na hook-script for ubuntu server 14.04 to unlock a LUKS-drive at boot, using ssh, an usb-drive or passphrase\r\n\r\n        CAUTION! This script is NOT tested with ubuntu server 16.04 at the moment! Proceed on your own risk!\r\n\r\nThis script is based on the LUKS-tripple-unlock script (https://github.com/chadoe/luks-triple-unlock) by Martin van Beurden, \r\n\r\non the tutorial Entschl√ºsseln mit einem USB-Stick (https://wiki.ubuntuusers.de/System_verschl%C3%BCsseln/Entschl%C3%BCsseln_mit_einem_USB-Schl%C3%BCssel/ ),\r\nRevision from 14. Juni 2016 08:32 last edited by noisefloor and originally created by Franco_bez (https://ubuntuusers.de/user/franco_bez/)\r\n\r\nand decryptkeydevice by Franco_bez (https://ubuntuusers.de/user/franco_bez/) as found at (https://wiki.ubuntuusers.de/System_verschl%C3%BCsseln/Entschl%C3%BCsseln_mit_einem_USB-Schl%C3%BCssel/#Anlegen-der-noetigen-Konfigurationsdateien), published under CC BY-NC-SA 2.0 DE (http://creativecommons.org/licenses/by-nc-sa/2.0/de/deed.de).\r\n\r\nAll credits and rights for these scripts belong to them.\r\n\r\nI made this script beecause I used an usb-drive to unlock my server. Because i wanted to be able to remotely reboot the server if necessary,\r\nI had to let the usb-drive plugged into the server, which makes any encryption more or less useless. Because of that I began searching\r\nfor other ways to unlock the serverand found the script i metnioned above, which was very similar to the script I already used for unlocking.\r\nAfter having read both of them it was clear they have got the same roots, so I thought it schould be possible to combine them, which is\r\nexactly what I did.\r\n\r\n\r\nThis Script was tested on Ubuntu Server 14.04. I am not responsible for any changes you make to your system. Continue with caution and ensure to have an initramfs-backup you can use to boot if something strange happens.\r\n\r\nThe script works for me when having one LVM to unlock. This script also works with RAID 1.\r\n\r\nThis script uses dropbear. For detailed instructions how to set up dropbear, please use the following article: \r\nhttps://www.thomas-krenn.com/de/wiki/Voll-verschl%C3%BCsseltes-System_via_SSH_freischalten\r\n\r\nHow to install this file:\r\n- connect the usb-drive to the machine\r\n- on your machine (or via ssh) run \"sudo ls -l /dev/disk/by-id\" and watch out for your usb-drive.\r\n- Write down the id of your usb-drive (usb-XXXX-0:0) and the label (../../sdX  WITHOUT any partiton number (NOT sdX1))\r\n- run \"sudo fdisk -l /dev/sdX\" and replace sdX with the label you have written down before. Write down the blocksize (like 512 bytes), you just need the number! Please also write down the beginning of the first partition (sdX1).\r\n- write down the label of the encrypted partition. If you don't know which device this partition is on, run \"sudo blkid | grep *\". This will show you the boot-partiton. Because you are using a script to unlock your machine while booting this will mostly get the right device. Please write the label down WITHOUT any partition-numbers (just /dev/sdX). \r\n- get both of the scripts to your server using git clone.\r\n- run the install.sh installation script.\r\n- If you want to add the possibility, to login to dropbear using key-files, please do this now and after that run \"sudo update-initramfs -c -k 'uname -r'\"\r\n\r\nHow to use this file:\r\n- Using the passphrase:\r\nYou can just type in the passphrase using a keyboard connected to the server.\r\n- Using SSH:\r\nAfter loging in to the server, you get asked for the passphrase. If you enter it correctly, the device will be unlockend.\r\n- Using an usb-drive:\r\nUsing this method, you create a key-file on your usb-drive, but instead of just creating a normal file, it will write the key at the beginning\r\nof the drive. So there is nothing blowing up your cover for your encrypted harddrive.\r\n\r\nOne last word concerning the License:\r\nunfortunately, here are two projects merged which are published under different Licenses. The install.sh-script from Martin van Beurden\r\nmay be used under the MIT-License, whereas the script from Franco_be which is found at ubuntuusers.de has to be published under the \r\nCC BY-NC-SA 2.0 DE by the forum-guidelines from ubuntuusers.de.\r\nSo its a bit unclear which License to use. Because the MIT-License is pretty easy, whereas the CC-License is pretty restrictive it \r\nseems to be the most logical decission to use this License for the scripts. I hope this is okay with everyone who contributed to the \r\nscripts I used. If it does not, please feel free to contact me so we can decide how to go on.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}